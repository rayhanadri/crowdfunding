basePath: /api/v1/
definitions:
  model.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
  model.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UserRegister:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a crowdfunding API.
  title: Crowdfunding API
  version: "1.0"
paths:
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate and return a token for the user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: Login user
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      description: Current User Details
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get Current User Details
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: Update user details
      tags:
      - users
  /users/refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh the access token using the refresh token
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: Refresh user access token
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
      summary: Register a new user
      tags:
      - users
swagger: "2.0"
